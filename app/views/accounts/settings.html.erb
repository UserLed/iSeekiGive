<%=h content_for(:title, "| Account Settings") %>

<%= render "dashboard/navigation" %>

<div class="gap"></div>


<div class="container">

  <div class="page-header">
    <h3>
      Password Change
    </h3>
  </div>

    <%= form_for(:user, :url => account_settings_path, method: 'POST') do |f| %>

      <% if @user.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(@user.errors.count, "error") %> prohibited this user from being saved:</h2>

            <ul>
              <% @user.errors.full_messages.each do |msg| %>
                  <li><%= msg %></li>
              <% end %>
            </ul>
          </div>
      <% end %>

    <div class="control-group">
      <%= f.label :password, :class => 'control-label' %>
      <div class="controls">
        <%= f.password_field :password, :class => 'text_field', :required => true %>
      </div>
    </div>


    <div class="control-group">
      <%= f.label :password_confirmation, :class => 'control-label' %>
      <div class="controls">
        <%= f.password_field :password_confirmation, :class => 'text_field', :required => true, :oninput => "check(this)" %>
      </div>
    </div>


    <div class="form-actions">
      <%= f.submit "Submit", :class => 'btn btn-primary' %>
    </div>
<% end %>
</div>

<script type='text/javascript'>
    function check(input) {
        if (input.value != document.getElementById('<%= @user.class.name.downcase %>_password').value) {
            input.setCustomValidity('The two passwords must match.');
        } else {
            // input is valid -- reset the error message
            input.setCustomValidity('');
        }
    }
</script>